import sys
import os

# Add the parent directory to the system path
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import tictactoe_ultimate as module_0
import tictactoe_states as module_1


def test_case_0():
    ultimate_tic_tac_toe_0 = module_0.UltimateTicTacToe()
    assert len(ultimate_tic_tac_toe_0.board) == 3
    assert ultimate_tic_tac_toe_0.numOfMoves == 0


@pytest.mark.xfail(strict=True)
def test_case_1():
    ultimate_tic_tac_toe_0 = module_0.UltimateTicTacToe()
    assert len(ultimate_tic_tac_toe_0.board) == 3
    assert ultimate_tic_tac_toe_0.numOfMoves == 0
    ultimate_tic_tac_toe_0.winOnRow(
        ultimate_tic_tac_toe_0, ultimate_tic_tac_toe_0, ultimate_tic_tac_toe_0
    )


@pytest.mark.xfail(strict=True)
def test_case_2():
    ultimate_tic_tac_toe_0 = module_0.UltimateTicTacToe()
    assert len(ultimate_tic_tac_toe_0.board) == 3
    assert ultimate_tic_tac_toe_0.numOfMoves == 0
    ultimate_tic_tac_toe_0.winOnCol(
        ultimate_tic_tac_toe_0, ultimate_tic_tac_toe_0, ultimate_tic_tac_toe_0
    )


def test_case_3():
    ultimate_tic_tac_toe_0 = module_0.UltimateTicTacToe()
    assert len(ultimate_tic_tac_toe_0.board) == 3
    assert ultimate_tic_tac_toe_0.numOfMoves == 0
    var_0 = ultimate_tic_tac_toe_0.winOnDiag(
        ultimate_tic_tac_toe_0, ultimate_tic_tac_toe_0, ultimate_tic_tac_toe_0
    )
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_4():
    ultimate_tic_tac_toe_0 = module_0.UltimateTicTacToe()
    assert len(ultimate_tic_tac_toe_0.board) == 3
    assert ultimate_tic_tac_toe_0.numOfMoves == 0
    ultimate_tic_tac_toe_0.moveUser()


def test_case_5():
    ultimate_tic_tac_toe_0 = module_0.UltimateTicTacToe()
    assert len(ultimate_tic_tac_toe_0.board) == 3
    assert ultimate_tic_tac_toe_0.numOfMoves == 0
    var_0 = ultimate_tic_tac_toe_0.moveComp()


@pytest.mark.xfail(strict=True)
def test_case_6():
    ultimate_tic_tac_toe_0 = module_0.UltimateTicTacToe()
    assert len(ultimate_tic_tac_toe_0.board) == 3
    assert ultimate_tic_tac_toe_0.numOfMoves == 0
    ultimate_tic_tac_toe_0.main()


def test_case_7():
    bool_0 = True
    ultimate_tic_tac_toe_0 = module_0.UltimateTicTacToe()
    assert len(ultimate_tic_tac_toe_0.board) == 3
    assert ultimate_tic_tac_toe_0.numOfMoves == 0
    var_0 = ultimate_tic_tac_toe_0.makeMove(bool_0, bool_0, bool_0, bool_0, bool_0)
    assert ultimate_tic_tac_toe_0.numOfMoves == 1


@pytest.mark.xfail(strict=True)
def test_case_8():
    sign_0 = module_1.Sign.CROSS
    ultimate_tic_tac_toe_0 = module_0.UltimateTicTacToe()
    assert len(ultimate_tic_tac_toe_0.board) == 3
    assert ultimate_tic_tac_toe_0.numOfMoves == 0
    ultimate_tic_tac_toe_0.winOnCol(ultimate_tic_tac_toe_0, sign_0, sign_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    ultimate_tic_tac_toe_0 = module_0.UltimateTicTacToe()
    assert len(ultimate_tic_tac_toe_0.board) == 3
    assert ultimate_tic_tac_toe_0.numOfMoves == 0
    sign_0 = module_1.Sign.CROSS
    ultimate_tic_tac_toe_0.winOnRow(ultimate_tic_tac_toe_0, sign_0, sign_0)


def test_case_10():
    sign_0 = module_1.Sign.CROSS
    ultimate_tic_tac_toe_0 = module_0.UltimateTicTacToe()
    assert len(ultimate_tic_tac_toe_0.board) == 3
    assert ultimate_tic_tac_toe_0.numOfMoves == 0
    var_0 = ultimate_tic_tac_toe_0.winOnDiag(sign_0, ultimate_tic_tac_toe_0, sign_0)
    assert var_0 is False
